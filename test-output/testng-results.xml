<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-08-16T12:25:43Z" name="Default suite" finished-at="2019-08-16T12:27:40Z" duration-ms="116499">
    <groups>
    </groups>
    <test started-at="2019-08-16T12:25:43Z" name="Default test" finished-at="2019-08-16T12:27:40Z" duration-ms="116499">
      <class name="testmeapp_tests.OnlineshoppingTest">
        <test-method is-config="true" signature="startReportBeforeTest()[pri:0, instance:testmeapp_tests.OnlineshoppingTest@11dc3715]" started-at="2019-08-16T12:25:44Z" name="startReportBeforeTest" finished-at="2019-08-16T12:26:54Z" duration-ms="70748" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReportBeforeTest -->
        <test-method signature="testRegistration()[pri:1, instance:testmeapp_tests.OnlineshoppingTest@11dc3715]" started-at="2019-08-16T12:26:55Z" name="testRegistration" finished-at="2019-08-16T12:27:21Z" duration-ms="25888" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegistration -->
        <test-method is-config="true" signature="getResultAfterMethod(org.testng.ITestResult)[pri:0, instance:testmeapp_tests.OnlineshoppingTest@11dc3715]" started-at="2019-08-16T12:27:21Z" name="getResultAfterMethod" finished-at="2019-08-16T12:27:21Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRegistration status=SUCCESS method=OnlineshoppingTest.testRegistration()[pri:1, instance:testmeapp_tests.OnlineshoppingTest@11dc3715] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResultAfterMethod -->
        <test-method signature="testLogin()[pri:2, instance:testmeapp_tests.OnlineshoppingTest@11dc3715]" started-at="2019-08-16T12:27:21Z" name="testLogin" finished-at="2019-08-16T12:27:23Z" duration-ms="1793" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method is-config="true" signature="getResultAfterMethod(org.testng.ITestResult)[pri:0, instance:testmeapp_tests.OnlineshoppingTest@11dc3715]" started-at="2019-08-16T12:27:23Z" name="getResultAfterMethod" finished-at="2019-08-16T12:27:23Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin status=SUCCESS method=OnlineshoppingTest.testLogin()[pri:2, instance:testmeapp_tests.OnlineshoppingTest@11dc3715] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResultAfterMethod -->
        <test-method signature="testCart()[pri:3, instance:testmeapp_tests.OnlineshoppingTest@11dc3715]" started-at="2019-08-16T12:27:23Z" name="testCart" finished-at="2019-08-16T12:27:29Z" duration-ms="6250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCart -->
        <test-method signature="testPayment()[pri:4, instance:testmeapp_tests.OnlineshoppingTest@11dc3715]" started-at="2019-08-16T12:27:29Z" name="testPayment" finished-at="2019-08-16T12:27:36Z" duration-ms="6199" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Your order has been confirmed] but found [Your orde has been confirmed]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Your order has been confirmed] but found [Your orde has been confirmed]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at testmeapp_tests.OnlineshoppingTest.testPayment(OnlineshoppingTest.java:157)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPayment -->
        <test-method is-config="true" signature="getResultAfterMethod(org.testng.ITestResult)[pri:0, instance:testmeapp_tests.OnlineshoppingTest@11dc3715]" started-at="2019-08-16T12:27:29Z" name="getResultAfterMethod" finished-at="2019-08-16T12:27:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCart status=SUCCESS method=OnlineshoppingTest.testCart()[pri:3, instance:testmeapp_tests.OnlineshoppingTest@11dc3715] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResultAfterMethod -->
        <test-method is-config="true" signature="getResultAfterMethod(org.testng.ITestResult)[pri:0, instance:testmeapp_tests.OnlineshoppingTest@11dc3715]" started-at="2019-08-16T12:27:36Z" name="getResultAfterMethod" finished-at="2019-08-16T12:27:37Z" duration-ms="1087" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPayment status=FAILURE method=OnlineshoppingTest.testPayment()[pri:4, instance:testmeapp_tests.OnlineshoppingTest@11dc3715] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResultAfterMethod -->
        <test-method is-config="true" signature="endReportAfterTest()[pri:0, instance:testmeapp_tests.OnlineshoppingTest@11dc3715]" started-at="2019-08-16T12:27:37Z" name="endReportAfterTest" finished-at="2019-08-16T12:27:40Z" duration-ms="3328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReportAfterTest -->
      </class> <!-- testmeapp_tests.OnlineshoppingTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
